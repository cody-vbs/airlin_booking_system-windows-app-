
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author syd
 */
public class FlightResult extends javax.swing.JFrame {

    /**
     * Creates new form FlightResult
     */
    SearchFlightJava sj = new SearchFlightJava();
    FlightDBQuery fq= new FlightDBQuery();
    public FlightResult() throws SQLException {
        initComponents();
        this.flightTblResult();
        this.setJframeIcon();
       
 
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        flightTbl = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        flightTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(flightTbl);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Book Summary");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        bookArea.setColumns(20);
        bookArea.setRows(5);
        jScrollPane2.setViewportView(bookArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 31, Short.MAX_VALUE))
        );

        jButton1.setText("Proceed");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.getValue();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    private void flightTblResult() throws SQLException{
        if(sj.getFromFlight().getSelectedItem() == "Bacolod" && sj.toFlight.getSelectedItem() == "Cebu"){
            System.out.println(true);
            fq.loadTbl("bacolod_cebu", flightTbl);
        }else if(sj.getFromFlight().getSelectedItem()=="Bacolod" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("bacolod_manila", flightTbl);
        }else if(sj.getFromFlight().getSelectedItem()=="Bohol" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("bohol_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Boracay" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("boracay_manila", flightTbl);
        }else if (sj.fromFlight.getSelectedItem()=="Cagayan de Oro" && sj.toFlight.getSelectedItem()=="Cebu"){
            fq.loadTbl("cagayan_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Cagayan de Oro" && sj.toFlight.getSelectedItem() == "Manila"){
            fq.loadTbl("cagayan_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Cebu" && sj.toFlight.getSelectedItem()=="Bacolod"){
            fq.loadTbl("cebu_bacolod", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Cebu" && sj.toFlight.getSelectedItem()=="Cagayan de Oro"){
            fq.loadTbl("cebu_cagayan", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Cebu" && sj.toFlight.getSelectedItem()=="Davao"){
            fq.loadTbl("cebu_davao", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Cebu" && sj.toFlight.getSelectedItem()=="Gensan"){
            fq.loadTbl("cebu_gensan", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Cebu" && sj.toFlight.getSelectedItem()=="Iloilo"){
            fq.loadTbl("cebu_iloilo", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Cebu" && sj.toFlight.getSelectedItem() == "Korea"){
            fq.loadTbl("cebu_korea", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Cebu" && sj.toFlight.getSelectedItem() == "Manila"){
            fq.loadTbl("cebu_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Cebu" && sj.toFlight.getSelectedItem() == "Singapore"){
            fq.loadTbl("cebu_singapore", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Cebu" && sj.toFlight.getSelectedItem() == "Tokyo Japan"){
            fq.loadTbl("cebu_tokyo", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Clark" && sj.toFlight.getSelectedItem()=="Bohol"){
            fq.loadTbl("clark_bohol", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Clark" && sj.toFlight.getSelectedItem()=="Boracay"){
            fq.loadTbl("clark_boracay", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() =="Clark" && sj.toFlight.getSelectedItem() == "Cebu"){
            fq.loadTbl("clark_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Clark" && sj.toFlight.getSelectedItem() == "Davao"){
            fq.loadTbl("clark_davao", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Clark" && sj.toFlight.getSelectedItem()=="Singapore"){
            fq.loadTbl("clark_singapore", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Coron" && sj.toFlight.getSelectedItem() == "Cebu"){
            fq.loadTbl("coron_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Coron" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("coron_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Davao" && sj.toFlight.getSelectedItem() == "Bacolod"){
            fq.loadTbl("davao_bacolod", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Davao" && sj.toFlight.getSelectedItem() == "Cebu"){
            fq.loadTbl("davao_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Davao" && sj.toFlight.getSelectedItem() =="Iloilo"){
            fq.loadTbl("davao_iloilo", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Davao" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("davao_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Davao"&& sj.toFlight.getSelectedItem()=="Zamboanga"){
            fq.loadTbl("davao_zamboanga", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Dumaguete" && sj.toFlight.getSelectedItem() =="Manila"){
            fq.loadTbl("dumaguete_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Gensan" && sj.toFlight.getSelectedItem()=="Cebu"){
            fq.loadTbl("gensan_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Gensan" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("gensan_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem()=="Cagayan de Oro"){
            fq.loadTbl("iloilo_cagayan", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem()=="Cebu"){
            fq.loadTbl("iloilo_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem()=="Clark"){
            fq.loadTbl("iloilo_clark", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem()=="Davao"){
            fq.loadTbl("iloilo_davao", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem()=="Gensan"){
            fq.loadTbl("iloilo_gensan", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("iloilo_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Iloilo" && sj.toFlight.getSelectedItem() == "Puerto Princesa"){
            fq.loadTbl("iloilo_princesa", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Kalibo" && sj.toFlight.getSelectedItem()=="Cebu"){
            fq.loadTbl("kalibo_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Kalibo" && sj.toFlight.getSelectedItem() == "Manila"){
            fq.loadTbl("kalibo_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Bacolod"){
            fq.loadTbl("manila_bacolod", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Bangkok Thailand"){
            fq.loadTbl("manila_bangkok", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Bohol"){
            fq.loadTbl("manila_bohol", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Brunei"){
           fq.loadTbl("manila_brunei", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem() == "Cambodia"){
            fq.loadTbl("manila_cambodia", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Cebu"){
            fq.loadTbl("manila_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Bejing China"){
            fq.loadTbl("manila_china", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Davao"){
            fq.loadTbl("manila_davao", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Dubai"){
            fq.loadTbl("manila_dubai", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Hanoi Vietnam"){
            fq.loadTbl("manila_hanoi", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Hongkong"){
            fq.loadTbl("manila_hongkong", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Kuwait"){
            fq.loadTbl("manila_kuwait", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Malaysia"){
            fq.loadTbl("manila_malaysia", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Puerto Princesa"){
            fq.loadTbl("manila_princesa", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Qatar"){
            fq.loadTbl("manila_qatar", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Singapore"){
            fq.loadTbl("manila_singapore", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()== "Sydney Australia"){
            fq.loadTbl("manila_sydney", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Taipei"){
            fq.loadTbl("manila_taipei", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Manila" && sj.toFlight.getSelectedItem()=="Tokyo Japan"){
            fq.loadTbl("manila_tokyo", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Puerto Princesa" && sj.toFlight.getSelectedItem()=="Cebu"){
            fq.loadTbl("princesa_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Puerto Princesa" && sj.toFlight.getSelectedItem()=="Clark"){
            fq.loadTbl("princesa_clark", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Puerto Princesa" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("princessa_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Siargao" && sj.toFlight.getSelectedItem() == "Cebu"){
            fq.loadTbl("siargao_cebu", flightTbl);
        }else if(sj.fromFlight.getSelectedItem() == "Siargao" && sj.toFlight.getSelectedItem()=="Clark"){
            fq.loadTbl("siargao_clark", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Siargao" && sj.toFlight.getSelectedItem()=="Davao"){
            fq.loadTbl("siargao_davao", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Siargao" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("siargao_manila", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Zamboanga" && sj.toFlight.getSelectedItem()=="Davao"){
            fq.loadTbl("zamboanga_davao", flightTbl);
        }else if(sj.fromFlight.getSelectedItem()=="Zamboanga" && sj.toFlight.getSelectedItem()=="Manila"){
            fq.loadTbl("zamboanga_manila", flightTbl);
        }else{
            fq.noFlightsAvailable();
        }
    }
    
      public void setJframeIcon(){
        String iconDir = "src\\Icons\\logo.png";
        Image icon = Toolkit.getDefaultToolkit().getImage(iconDir);
        this.setIconImage(icon);
        this.setTitle("Airline Booking System");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        //resize table cells
        this.resizeColumnWidth(flightTbl);
        
    }
      
    private  void getValue(){
        int row = flightTbl.getSelectedRow();
        int column = flightTbl.getColumnCount();
        String [] data = new String[6];
        for(int i = 0; i < column; i++) {
//            System.out.println(flightTbl.getValueAt(row, i));
            data [i] = flightTbl.getValueAt(row, i).toString();
             
            
        }
        String text ="Flight No.: " +  data[0] +"\n" +"Departure: " +data[1] + "\n"+"Arrival: "+data[2] 
                +"\n" +"Airport: "+data[3]+"\n"+"Duration: " +data[4]+"\n"+"Fly + Baggage: "+ data[5];
        
        
        //debugging
        
//        String data2= data[5].replace("PHP","");
//        
//        Double num = Double.parseDouble(data2);
//        
//        Double change = 30000 -num;
//   
//        System.out.println(data2);
//        System.out.println(change);
        bookArea.setText(text);
       
        
    }
    
    
    
     public void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width +1 , width);
            }
            if(width > 300)
                width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightResult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FlightResult().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FlightResult.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea bookArea;
    private javax.swing.JTable flightTbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
